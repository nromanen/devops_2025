1. Results of the task on KillerCoda: https://drive.google.com/file/d/15ToCCfD0hcYyqfbcFjaPdeCMS0rl5flu/view?usp=sharing
2. Screenshots that demonstrate the working WordPress site: https://drive.google.com/file/d/14bNGnBxU8bCgJhXVwh3XaQC8rSrzo50r/view?usp=sharing
#Explanation for WordPress task:
192.168.1.252: Встановлено Apache, PHP і WordPress, які підключаються до MySQL на 192.168.1.139.
192.168.1.139: Встановлено лише MySQL, який обслуговує базу wordpress.
#Схема роботи:
Користувач звертається до 192.168.1.252/wordpress.
Apache на 192.168.1.252 обробляє запит через PHP.
PHP підключається до MySQL на 192.168.1.139 для отримання даних із бази wordpress.

#Task on Nginx
Screenshots https://drive.google.com/file/d/1r7W_EREKqTpjfp8y_plfNE9bEBoZJRTM/view?usp=sharing
and Video https://drive.google.com/file/d/1-VC24mA7rtVVoX40AhnQt6rc7UiOgSZR/view?usp=sharing
 demonstrating the response pages for this task.

#Nginx configuration file in folder.

#Configuration file content:

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    upstream backend_servers {
       server 127.0.0.1:8080;
       server 127.0.0.1:8081;
       }
   server {
       listen 80;
       server_name 192.168.1.139;

       location / {
           proxy_pass http://backend_servers;
	   proxy_set_header Host $host;
	   proxy_set_header X-Real_IP $remote_addr;
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	   }
	   }
   server {
       listen 127.0.0.1:8080;
       server_name localhost;

       root /var/www/server1;
       index index.html;

       location / {
           try_files $uri $uri/ /index.html;
	   }
	   }

   server {
       listen 127.0.0.1:8081;
       server_name localhost;
       root /var/www/server2;
       index index.html;

       location / {
          try_files $uri $uri/ /index.html;
	  }
	  }	  
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}


